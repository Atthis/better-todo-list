@use 'sass:color';

/* Variables */
/* Colors */
$color-primary: hsl(216, 57%, 50%);
$color-light: #f4f4f4;
$color-dark: #333;
$color-warning: rgb(99, 36, 36);

/* Values */
$quick-transition: 0.15s;
$task-bullet-size: 2rem;

*,
::before,
::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: $color-primary;
  font-family: 'Work sans', sans-serif;
  font-size: 1.5rem;
  font-weight: 300;
  color: $color-light;
  display: grid;
  grid:
    'header header header header' auto
    '...... lists  active ......' auto /
    1fr minmax(100px, 300px) minmax(250px, 500px) 1fr;

  /* Utility classes */
  .new {
    border: none;
    border-bottom: 1px solid currentColor;
    background: transparent;
    outline: none;
    padding: 0.5em;
    transition: border-bottom $quick-transition ease-in-out;

    &:focus {
      border-bottom: 2px solid currentColor;

      &::placeholder {
        opacity: 0.5;
      }
    }
    
    &::placeholder {
      color: inherit;
      opacity: 0.7;
    }
  }

  .btn {
    cursor: pointer;
    border: none;
    background: transparent;
    font-weight: 900;
    color: inherit;
  }

  .title {
    grid-area: header;
    color: rgba($color: #000000, $alpha: 0.1);
    font-size: clamp(3rem, calc(9vw + 1rem), 8rem);
    font-weight: 900;
    text-align: center;
    margin: -0.3em auto 2.5rem;
  }

  /*  Task lists  */

  .all-tasks {
    grid-area: lists;

    .task-lists-title {
      margin: 2rem 0;
    }

    .task-lists {
      list-style-position: inside;
      list-style-type: circle;
      font-size: 1.5rem;
      margin-bottom: 1.5rem;

      .task-list {
        margin: 0.4em 0;
        transition: color $quick-transition ease-in-out,
          font-weight $quick-transition ease-in-out;
        cursor: pointer;

        &.active-list {
          font-weight: 700;
          list-style-type: disc;
        }

        &:not(.active-list):hover {
          color: color.scale($color-light, $lightness: -15%);
        }
      }
    }

    .new-list-form {
      display: flex;
      justify-content: flex-start;
      color: $color-light;

      .btn.add-list {
        font-size: 1.2em;
        padding-right: 0.2em;

        &:hover {
          color: color.scale($color-primary, $lightness: -50%);
        }
      }

      .new.add-list {
        color: inherit;
        order: 2;
        width: 75%;
        font-size: 0.6em;
      }
    }
  }

  /*  ToDo list  */
  .todo-list {
    grid-area: active;

    .todo-list-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 2rem;
      background-color: color.scale($color-dark, $lightness: 90%);
      color: $color-dark;

      p {
        font-size: 1rem;
        color: color.scale($color-dark, $lightness: 30%);
      }
    }

    .todo-list-body {
      background-color: $color-light;
      padding: 2rem;
      color: $color-dark;

      .task {
        padding: 0.8em 0;
        position: relative;
        border-bottom: 1px solid color.scale($color-dark, $alpha: -80%);
        font-size: 1.3rem;
        font-weight: 400;
        $tick-size: 1em;

        &:first-child {
          padding-top: 0;
        }

        &:last-child {
          margin-bottom: 0.5em;
        }

        label {
          position: relative;
          display: inline-block;
          cursor: pointer;
          transition: all $quick-transition ease-in-out;

          &::after {
            content: '';
            position: absolute;
            top: 50%;
            left: calc($tick-size + 0.5em);
            width: 95%;
            height: 2px;
            background-color: color.scale($color-dark, $lightness: 50%);
            transform: scaleX(0);
            transform-origin: right;
            transition: transform $quick-transition ease-in;
          }

          .custom-checkbox {
            position: relative;
            display: inline-block;
            box-sizing: border-box;
            width: $tick-size;
            height: $tick-size;
            margin-right: calc($tick-size / 2);
            transform: translateY(20%);
            border: 0.15em solid currentColor;
            border-radius: 50%;
            transition: all $quick-transition ease-in-out;
          }
          &:hover .custom-checkbox {
            border: 0.15em solid $color-primary;
            transform: translateY(20%) scale(1.2);
          }
        }

        input[type='checkbox'] {
          opacity: 0;
          position: absolute;

          &:checked + label {
            // font-weight: 300;
            color: color.scale($color-dark, $lightness: 50%);

            &::after {
              transform: scaleX(1);
              transform-origin: left;
            }
            .custom-checkbox {
              border: 0.15em solid $color-primary;
              background-color: $color-primary;
              box-shadow: inset 0px 0px 0px 0.15em $color-light;
            }
          }
        }
      }

      .new-task-form {
        display: flex;
        justify-content: flex-start;

        .btn.add-task {
          font-size: 1.5em;
          padding-right: 0.2em;
          color: $color-primary;

          &:hover {
            color: color.scale($color-primary, $lightness: 30%);
          }
        }

        .new.add-task {
          order: 2;
          font-size: 1rem;
        }
      }
    }

    .todo-list-footer {
      display: flex;
      justify-content: space-around;
      margin: 0.8em 0;

      .btn.delete {
        font-size: 0.9rem;
        font-weight: 300;
        cursor: pointer;

        &:hover {
          color: color.scale($color-light, $alpha: -50%);
        }
      }
    }
  }
}

/*  Media Queries  */
@media screen and (max-width: 850px) {
  body {
    grid:
      'header' auto
      'lists' auto
      'active' auto /
      1fr;

    .title {
      margin-bottom: 0;
      font-size: clamp(3rem, calc(8vw + 1rem), 8rem);
    }

    .all-tasks {
      margin: 0 2rem 2rem;
    }
  }
}
